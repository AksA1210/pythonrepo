# -*- coding: utf-8 -*-
"""Lab_cycle_3_Q5

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1yUzqLrrLQF63BacRm-3myesz3sG-XSUB
"""

from tkinter import *
from tkinter.filedialog import askopenfilename,asksaveasfile
from tkinter.messagebox import showinfo
from tkinter.ttk import Style, Treeview
import pickle

global listof_vehicles
global sorted_list
listof_vehicles = []
vehicle_attributes = ["ownerName","vendor","model","type","reg_no","engine_no","mileage"]
vehicle_details = dict.fromkeys(vehicle_attributes, None)

def add_list():
    global listof_vehicles
    tree_list.insert(parent='', index='end', text="", values=(owner.get(), vendor.get(),model.get(),typeClass.get(),regno.get(),engineno.get(),mileage.get()))
    vehicle_details['ownerName'] = owner.get()
    vehicle_details['vendor'] = vendor.get()
    vehicle_details['model'] = model.get()
    vehicle_details['type'] = typeClass.get()
    vehicle_details['reg_no'] = int(regno.get())
    vehicle_details['engine_no'] = int(engineno.get())
    vehicle_details['mileage'] = float(mileage.get())
    listof_vehicles.append(vehicle_details.copy())

def filter_list():
    global listof_vehicles
    if(owner.get()!="" or vendor.get()!="" or model.get()!="" or typeClass.get()!="" or mileage.get()!=""):
        for item in tree_list.get_children():
            tree_list.delete(item)
    else:
        showinfo(title="Error",message="Give a Filter Key")
    if(owner.get()!=""):
        filter_key = owner.get()
        for i in listof_vehicles:
            if i['ownerName']==filter_key:
                tree_list.insert(parent='', index='end', text="", values=(i['ownerName'],i['vendor'],i['model'],i['type'],i['reg_no'],i['engine_no'],i['mileage']))
    elif (vendor.get()!=""):
        filter_key = vendor.get()
        for i in listof_vehicles:
            if i['vendor']==filter_key:
                tree_list.insert(parent='', index='end', text="", values=(i['ownerName'],i['vendor'],i['model'],i['type'],i['reg_no'],i['engine_no'],i['mileage']))
    elif (model.get()!=""):
        filter_key = model.get()
        for i in listof_vehicles:
            if i['model']==filter_key:
                tree_list.insert(parent='', index='end', text="", values=(i['ownerName'],i['vendor'],i['model'],i['type'],i['reg_no'],i['engine_no'],i['mileage']))
    elif (typeClass.get()!=""):
        filter_key = typeClass.get()
        for i in listof_vehicles:
            if i['type']==filter_key:
                tree_list.insert(parent='', index='end', text="", values=(i['ownerName'],i['vendor'],i['model'],i['type'],i['reg_no'],i['engine_no'],i['mileage']))
    elif (mileage.get()!=""):
        filter_key = float(mileage.get())
        for i in listof_vehicles:
            if i['mileage']==filter_key:
                tree_list.insert(parent='', index='end', text="", values=(i['ownerName'],i['vendor'],i['model'],i['type'],i['reg_no'],i['engine_no'],i['mileage']))
def delete():
    selection=tree_list.selection()[0] 
    tree_list.delete(selection)

def load_file():
    for item in tree_list.get_children():
        tree_list.delete(item)
    filetypes = (
        ('Pickle files', '*.pkl'),
        ('All files', '*.*')
    )
    global listof_vehicles
    filename = askopenfilename(title="Open Pickle",initialdir='/',filetypes=filetypes)
    listof_vehicles = pickle.load(open(filename,"rb"))
    showinfo(title="Selected File",message=filename)
    for i in listof_vehicles:
        tree_list.insert(parent='', index='end', text="", values=(i['ownerName'],i['vendor'],i['model'],i['type'],i['reg_no'],i['engine_no'],i['mileage']))


def sort_mileage():
    for item in tree_list.get_children():
        tree_list.delete(item)
    global listof_vehicles
    global sorted_list
    sorted_list = sorted(listof_vehicles,key= lambda i:i['mileage'])    
    for i in sorted_list:
        tree_list.insert(parent='', index='end', text="", values=(i['ownerName'],i['vendor'],i['model'],i['type'],i['reg_no'],i['engine_no'],i['mileage']))
    showinfo(title="Sorted",message="Sorted Successfully")

def create_pickle():
    fileextensions = [('Pickle File', '*.pkl'),('All Files', '*.*')]
    file = asksaveasfile(filetypes = fileextensions, defaultextension = fileextensions)
    pickle.dump(listof_vehicles,open(file,"wb"))
    showinfo(title="Created File",message="Vehicle Pickle File is Created")

window = Tk()
window.geometry("750x400")
window.title("Vehicle Data")

owner = StringVar()
vendor = StringVar()
model = StringVar()
typeClass = StringVar()
regno = StringVar()
engineno = StringVar()
mileage = StringVar()


label1 = Label(window,text="Owner Name ")
label1.grid(row=0,column=0)

entry1 = Entry(window,width=25,textvariable=owner)
entry1.grid(row=0,column=1)

label2 = Label(window,text="Vendor Name ")
label2.grid(row=0,column=2)

entry2 = Entry(window,width=25,textvariable=vendor)
entry2.grid(row=0,column=3)

label3 = Label(window,text="Model Name ")
label3.grid(row=1,column=0)

entry3 = Entry(window,width=25,textvariable=model)
entry3.grid(row=1,column=1)

label4 = Label(window,text="Type  ")
label4.grid(row=1,column=2)

entry4 = Entry(window,width=25,textvariable=typeClass)
entry4.grid(row=1,column=3)

label5 = Label(window,text="Registration Number  ")
label5.grid(row=2,column=0)

entry5 = Entry(window,width=25,textvariable=regno)
entry5.grid(row=2,column=1)

label6 = Label(window,text="Engine Number ")
label6.grid(row=2,column=2)

entry6 = Entry(window,width=25,textvariable=engineno)
entry6.grid(row=2,column=3)


label7 = Label(window,text="Mileage")
label7.grid(row=3,column=0)

entry7 = Entry(window,width=25,textvariable=mileage)
entry7.grid(row=3,column=1)

button1=Button(window,width=10,text="Load Pickle",bg='#99CCAA',command=load_file)
button1.grid(row=2,column=4)

button8=Button(window,width=10,text="Filter",bg='#99CCAA',command=filter_list)
button8.grid(row=2,column=5)

button2=Button(window,width=10,text="Add",bg='#99CCAA',command=add_list)
button2.grid(row=0,column=4)

button4=Button(window,width=10,text="Delete",bg='#99CCAA',command=delete)
button4.grid(row=1,column=4)

button5=Button(window,width=10,text="Sort Mileage",bg='#99CCAA',command=sort_mileage)
button5.grid(row=1,column=5)


button7=Button(window,width=10,text="Create Pickle",bg='#99CCAA',command=create_pickle)
button7.grid(row=0,column=5)


style = Style()
style.theme_use("alt")
style.configure("Treeview",
    background="silver",
    foreground='green'
)
style.map('Treeview',background=[('selected','#FF1800')])
tree_list = Treeview(columns=("Owner","Vendor","Model","Type","Reg_no","Engine_no","Mileage"),show='headings')

tree_list.heading("Owner",text="Owner")
tree_list.heading("Vendor",text="Vendor")
tree_list.heading("Model",text="Model")
tree_list.heading("Type",text="Type")
tree_list.heading("Reg_no",text="Reg_no")
tree_list.heading("Engine_no",text="Engine_no")
tree_list.heading("Mileage",text="Mileage")

tree_list['show']='headings'

tree_list.column("Owner",width=90, anchor="center")
tree_list.column("Vendor",width=50, anchor="center")
tree_list.column("Model",width=50, anchor="center")
tree_list.column("Type",width=40, anchor="center")
tree_list.column("Reg_no",width=80, anchor="center")
tree_list.column("Engine_no",width=80, anchor="center")
tree_list.column("Mileage",width=50, anchor="center")

tree_list.grid(row=4,column=0,columnspan=6)
window.mainloop()
