# -*- coding: utf-8 -*-
"""lab_cycle_3_question_4

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/12cDIsUh4WpMWn4ZkBvZ7GWUKJr5NReWe
"""

import pickle,tabulate
class vehicle_attributes:

  listof_keys = ["id","ownerName","vendor","model","type","reg_no","engine_no","mileage"]
  _data_base = dict.fromkeys(listof_keys, None)

class Vehicles(vehicle_attributes):
  __listof_vehicles = []
  __id = 0
  def add_entries(self):
    option = 1
    while option==1:
      self.__id = self.__id + 1
      entry_list = []
      entry_list.append(self.__id)
      entry_list.append(input("Owner Name : "))
      entry_list.append(input("Vendor Name : "))
      entry_list.append(input("Model Name : "))
      entry_list.append(input("Type : "))
      entry_list.append(int(input("Registration Number : ")))
      entry_list.append(int(input("Engine Number : ")))
      entry_list.append(float(input("Mileage : ")))
      
      for i,key in zip(entry_list,self._data_base):
        self._data_base[key] = i
      self.__listof_vehicles.append(self._data_base.copy())
      option = int(input("Do you want to add more entries\n1.Add\n2.Exit\n "))
     
  def delete_entries(self):
    found = False
    search_key = int(input("Enter your ID : "))
    for i in range(len(self.__listof_vehicles)):
      if self.__listof_vehicles[i]['id']==search_key:
        found = True
        del self.__listof_vehicles[i]
        break
    if(not found):
      print("Invalid Id")
  
  def modify_entries(self):
    found = False
    search_key = int(input("Enter your ID : "))
    for i in self.__listof_vehicles:
      if i['id']==search_key:
        found = True
        print("Choose the attribute you want to change")
        print("1.Owner Name")
        print("2.Vendor Name")
        print("3.Model Name")
        print("4.Type")
        print("5.Registration Number")
        print("6.Engine Number")
        print("7.Mileage")
        option = int(input("Enter choice : "))
        if option==1:
          i['ownerName'] = input("Owner Name : ")
        elif option==2:
          i['vendor'] = input("Vendor Name : ")
        elif option==3:
          i['model'] = input("Model Name : ")   
        elif option==4:
          i['type'] = input("Type : ")
        elif option==5:
          i['reg_no'] = int(input("Registration Number : "))    
        elif option==6:
          i['engine_no'] = int(input("Engine Number : "))
        elif option==7:
          i['mileage'] = float(input("Mileage : "))
    if(not found):
      print("Invalid Key")

  def display(self,*args):
    header = ['Id','Owner','Vendor','Model','Type','Registration Number','Engine Number','Mileage']
    if(len(args)==0):
      rows =  [x.values() for x in self.__listof_vehicles]
      print(tabulate.tabulate(rows, header,tablefmt='grid'))
    elif (len(args)==2):
      print("\n",args[0])
      rows = [x.values() for x in args[1]]
      print(tabulate.tabulate(rows, header,tablefmt='grid'))

  def sort_mileage(self):
    sortedList = sorted(self.__listof_vehicles,key = lambda i:i['mileage'])
    self.display("Mileage Sorted List",sortedList)

  def create_file(self):
    pickle.dump(self.__listof_vehicles,open("vehicleDetails.pkl","wb"))

  def filter_attributes(self):
    print("Choose the attribute which you want to filter : ")
    print("1.Owner Name")
    print("2.Vendor")
    print("3.Model Name")
    print("4.Type")
    print("5.Mileage")
    option = int(input("Enter your option : "))
    filtered_list = []
    if(option==1):
      filtered_key = (input("Enter the name you want to filter"))
      filtered_list = [i for i in self.__listof_vehicles if i['ownerName']== filtered_key]
      self.display("Filtered List",filtered_list)
    elif (option==2):
      filtered_key = (input("Enter the name you want to filter"))
      filtered_list = [i for i in self.__listof_vehicles if i['vendor']== filtered_key]
      self.display("Filtered List",filtered_list)
    elif (option==3):
      filtered_key = (input("Enter the name you want to filter"))
      filtered_list = [i for i in self.__listof_vehicles if i['model']== filtered_key]
      self.display("Filtered List",filtered_list)
    elif (option==4):
      filtered_key = (input("Enter the name you want to filter"))
      filtered_list = [i for i in self.__listof_vehicles if i['type']== filtered_key]
      self.display("Filtered List",filtered_list)
    elif(option==5):
      filtered_key = float(input("Enter the name you want to filter"))
      filtered_list = [i for i in self.__listof_vehicles if i['mileage']== filtered_key]
      self.display("Filtered List",filtered_list)
  def loadFile(self,file_path):
    self.__listof_vehicles = pickle.load(open(file_path,"rb"))
    idList = [self.__listof_vehicles[i]['id'] for i in range(len(self.__listof_vehicles))]
    self.__id = max(idList)

def main():
  vehicle_obj = Vehicles()
  if(int(input("1.Add Entries\n2.Load Pickle\n"))==1):
    vehicle_obj.add_entries()  
  else:
    file_path = input("Enter the file name : ")
    vehicle_obj.loadFile(file_path)
  vehicle_obj.display()
  mainLoopOption=1
  while mainLoopOption==1:
    print("1.Add Entries")
    print("2.Modify Attributes")
    print("3.Delete Attributes")
    print("4.Display Entries")
    print("5.Sort According to Mileage")
    print("6.Filter Attributes")
    print("7.Create Pickle File")
    print("8.Exit")
    choice = int(input("Enter your choice : "))
    if choice==1:
      vehicle_obj.add_entries()
    elif choice==2:
      vehicle_obj.modify_entries()
    elif choice==3:
      vehicle_obj.delete_entries()
    elif choice==4:
      vehicle_obj.display()
    elif choice==5:
      vehicle_obj.sort_mileage()
    elif choice==6:
      vehicle_obj.filter_attributes()
    elif choice==7:
      vehicle_obj.create_file()
    elif choice==8:
      break
  mainLoopOption = int(input("\n1.Continue\n2.Exit"))

if __name__=="__main__":
  main()